/**CREATING TABLES**/
CREATE TABLE EMPLOYEE(
  EMPLOYEE_ID NUMBER,
  EMP_FIRSTNAME VARCHAR2(20),
  EMP_LASTNAME VARCHAR2(20),
  DEPARTMENT_ID NUMBER,
  SALARY NUMBER,
  EMP_EMAIL VARCHAR2(40),
  PRIMARY KEY (EMPLOYEE_ID)
);

CREATE TABLE DEPARTMENT(
  DEPARTMENT_ID NUMBER,
  DEPARTMENT_NAME VARCHAR2(20),
  PRIMARY KEY (DEPARTMENT_ID)
);

/**ADDED FOREIGN KEY**/
ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_DEPARTMENT_ID
FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);

/**SEQUENCES AND TRIGGERS FOR PRIMARY KEYS**/
CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SQ_DEPARTMENT_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW 
BEGIN
  SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL; 
END;

CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW 
BEGIN
  SELECT SQ_DEPARTMENT_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL; 
END;

/**POPULATING TABLES**/
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('SALES');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('HR');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('MANAGEMENT');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) 
VALUES ('Holden', 'Caulfield', 1, 7.25, 'hcaulfield@gmail.com');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) 
VALUES ('Zooey', 'Glass', 2, 10, 'zglass@aol.com');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) 
VALUES ('Zacarias', 'Garcia', 3, 23, 'zgarcia@yahoo.com');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) 
VALUES ('Roman', 'Isaiah', 3, 23, 'risaiah@hotmail.com');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) 
VALUES ('Rice', 'Pudding', 2, 7.25, 'rpudding@gmail.com');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL) 
VALUES ('Snicker', 'Doodle', 1, 8, 'sdoodle@yahoo.com');

/**STORED PROCEDURES**/
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(DEPART_ID IN NUMBER, AVGSAL OUT NUMBER, VALID OUT NUMBER)
IS
  NUMROW NUMBER :=0;
BEGIN
  SELECT count(DEPARTMENT_ID) INTO NUMROW FROM DEPARTMENT WHERE DEPARTMENT_ID=DEPART_ID;
  IF (NUMROW>0) THEN 
      VALID:=1;
      UPDATE EMPLOYEE SET SALARY=SALARY*1.1 WHERE EMPLOYEE.DEPARTMENT_ID=DEPART_ID;
      SELECT AVG(SALARY) INTO AVGSAL FROM EMPLOYEE;
  ELSE VALID:=0;
  END IF;
END;

CREATE OR REPLACE PROCEDURE SP_DEPARTMENT_SALARY(S OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN S FOR
    SELECT D.DEPARTMENT_ID, D.DEPARTMENT_NAME, AVGSAL.AVGSALARY FROM DEPARTMENT D
    LEFT JOIN
    (SELECT AVG(SALARY) AS AVGSALARY, DEPARTMENT_ID FROM EMPLOYEE GROUP BY DEPARTMENT_ID) AVGSAL 
    ON AVGSAL.DEPARTMENT_ID=D.DEPARTMENT_ID;
END;

