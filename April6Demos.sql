--fun with functions
CREATE OR REPLACE FUNCTION FIND_MAX_NUMBER (X IN NUMBER, Y IN NUMBER)
RETURN NUMBER
IS 
Z NUMBER;
BEGIN
  IF X>Y THEN 
    Z:=X;
  ELSE
    Z:=Y;
  END IF;
  RETURN Z;
END; 
--BEGIN/END BLOCKS ARE NOT TIED TO TRANSACTIONS AT ALL 

DECLARE
  FIRST_NUM NUMBER;
  SECOND_NUM NUMBER;
  MAX_NUM NUMBER;
BEGIN
  FIRST_NUM:=22;
  SECOND_NUM:=42;
  MAX_NUM:=FIND_MAX_NUM(FIRST_NUM,SECOND_NUM);
  DBMS_OUTPUT.PUT_LINE('MAX: '||MAX_NUM);
END;

--TRY WITH CHARACTERS! 
CREATE OR REPLACE FUNCTION FIND_MAX_CHARACTER (X IN VARCHAR2, Y IN VARCHAR2)
RETURN VARCHAR2
IS 
Z VARCHAR2(4);
BEGIN
  IF X>Y THEN 
    Z:=X;
  ELSE
    Z:=Y;
  END IF;
  RETURN Z;
END; 
DECLARE
  FIRST_CHAR VARCHAR2(4);
  SECOND_CHAR VARCHAR2(4);
  MAX_CHAR VARCHAR2(4);
BEGIN
  FIRST_CHAR:='A';
  SECOND_CHAR:='Z';
  MAX_CHAR:=FIND_MAX_CHARACTER(FIRST_CHAR,SECOND_CHAR);
  DBMS_OUTPUT.PUT_LINE('MAX: '||MAX_CHAR);
END;

--STORED PROCEDURES

CREATE OR REPLACE PROCEDURE HELLO_WORLD_PROCEDURE
IS
BEGIN
  DBMS_OUTPUT.PUT_LINE('HELLO WORLD');
END;
--INVOKE HELLO WORLD
BEGIN 
  HELLO_WORLD_PROCEDURE();
END;

--EXAMPLE WITH CURSORS 
CREATE OR REPLACE PROCEDURE GET_ALL_BEARS(S OUT SYS_REFCURSOR)
IS 
BEGIN
OPEN S FOR 
SELECT BEAR_ID,BEAR_NAME FROM BEAR;
END;

DECLARE 
  S SYS_REFCURSOR;
  SOME_ID BEAR.BEAR_ID%TYPE;
  SOME_NAME BEAR.BEAR_NAME%TYPE;
BEGIN
  GET_ALL_BEARS(S);
  
  LOOP
    FETCH S INTO SOME_ID,SOME_NAME;
    EXIT WHEN S%NOTFOUND;
    DBMS_OUTPUT.PUT_LINE(SOME_ID||' IS CURRENT ID, '||SOME_NAME||' IS CURRENT NAME');
  END LOOP;
  CLOSE S;
END;

--FEED THE BEAR
CREATE OR REPLACE PROCEDURE SP_FEED_BEAR(
  B_ID IN NUMBER,C_ID IN NUMBER,HONEY_AMT IN NUMBER)
IS
BEGIN
--SET TRANSACTION READ WRITE ISOLATION LEVEL SERIALIZABLE;
/*CHECK VALIDITY OF PAIRING
  IF TRUE THEN
    DBMS_OUTPUT.PUT_LINE('VALID PAIRING');
  ELSE
  DBMS_OUTPUT.PUT_LINE('INVALID PAIRING');
  END IF;*/
--DECREASE BEEHIVE WEIGHT
  UPDATE BEEHIVE SET BEEHIVE_WEIGHT = BEEHIVE_WEIGHT-HONEY_AMT WHERE BEEHIVE_ID = C_ID;
--INCREASE BEAR WEIGHT
  UPDATE BEAR SET BEAR_WEIGHT = BEAR_WEIGHT+HONEY_AMT WHERE BEAR_ID = B_ID;
  DBMS_OUTPUT.PUT_LINE('FED BEAR '||HONEY_AMT||' POUNDS OF HONEY');
  COMMIT;
  
  EXCEPTION
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('FAILED TO FEED BEAR');
  --https://docs.oracle.com/cd/B10501_01/appdev.920/a96624/07_errs.htm
  ROLLBACK;
  
END;

BEGIN
  SP_FEED_BEAR(1,2,500);
END;