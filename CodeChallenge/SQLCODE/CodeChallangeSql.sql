CREATE TABLE EMPLOYEE
(
  EMPLOYEE_ID INTEGER NOT NULL PRIMARY KEY,
  EMP_FIRSTNAME VARCHAR2(160) NOT NULL,
  EMP_LASTNAME VARCHAR2(160) NOT NULL,
  DEPARTMENT_ID INTEGER NOT NULL,
  DEPARTMENT_NAME VARCHAR2(160),
  FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID)

);
ALTER TABLE EMPLOYEE DROP COLUMN DEPARTMENT_NAME;
ALTER TABLE EMPLOYEE ADD SALARY FLOAT NOT NULL;
ALTER TABLE EMPLOYEE ADD EMP_EMAIL VARCHAR(160) NOT NULL UNIQUE;

CREATE TABLE DEPARTMENT
(
DEPARTMENT_ID INTEGER PRIMARY KEY,
DEPARTMENT_NAME VARCHAR2(160)
);


CREATE SEQUENCE SQ_EMP_ID_PK
START WITH 1
INCREMENT BY 1;


CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
  SELECT SQ_EMP_ID_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL; 
END;

CREATE SEQUENCE SQ_DEPART_ID_PK
START WITH 1
INCREMENT BY 1;


CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
  SELECT SQ_DEPART_ID_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL; 
END;

INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('HR');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('MARKETING');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('ACCOUNTING');


INSERT INTO EMPLOYEE(EMP_FIRSTNAME,EMP_LASTNAME,DEPARTMENT_ID,SALARY,EMP_EMAIL) 
VALUES('Luis','Nieves',1,1000000,'luisnieves@awesome.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME,EMP_LASTNAME,DEPARTMENT_ID,SALARY,EMP_EMAIL) 
VALUES('Pito','Jans',1,52000,'pitojans@awesome.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME,EMP_LASTNAME,DEPARTMENT_ID,SALARY,EMP_EMAIL) 
VALUES('Julio','Darcos',2,52000,'juliodarcos@awesome.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME,EMP_LASTNAME,DEPARTMENT_ID,SALARY,EMP_EMAIL) 
VALUES('Wepa','Pepe',2,52000,'wepapepe@awesome.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME,EMP_LASTNAME,DEPARTMENT_ID,SALARY,EMP_EMAIL) 
VALUES('Don','Ramon',3,250000,'donramon@awesome.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME,EMP_LASTNAME,DEPARTMENT_ID,SALARY,EMP_EMAIL) 
VALUES('Cuba','Libre',3,4,'cubalibre@awesome.com');


CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(
EMP_ID IN NUMBER)
IS
BEGIN
UPDATE EMPLOYEE SET SALARY = SALARY+(SALARY*.1)WHERE EMPLOYEE_ID = EMP_ID;
END;


--CREATE OR REPLACE PROCEDURE SP_AVERAGE_DEP_SALARY(DEP_ID IN NUMBER, AVE_SALARY OUT FLOAT)








