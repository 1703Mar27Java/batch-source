
CREATE TABLE ERS_USERS(
  U_ID NUMBER NOT NULL,
  U_USERNAME VARCHAR(40) NOT NULL,
  U_PASSWORD VARCHAR(40) NOT NULL,
  U_FIRSTNAME VARCHAR(30),
  U_LASTNAME VARCHAR(30),
  U_EMAIL VARCHAR(100),
  UR_ID NUMBER NOT NULL
);

CREATE TABLE ERS_USER_ROLES(
  UR_ID NUMBER NOT NULL,
  UR_ROLE VARCHAR2(40)
);

CREATE TABLE ERS_REIMBURSEMENTS(
  R_ID NUMBER NOT NULL,
  R_AMOUNT NUMBER NOT NULL,
  R_DESCRIPTION VARCHAR2(100),
  R_RECEIPT BLOB,
  R_SUBMITTED TIMESTAMP NOT NULL,
  R_RESOLVED TIMESTAMP,
  U_ID_AUTHOR NUMBER NOT NULL,
  U_ID_RESOLVER NUMBER,
  RT_ID NUMBER NOT NULL,
  RS_ID NUMBER NOT NULL
);

CREATE TABLE ERS_REIMBURSEMENT_STATUS(
  RS_ID NUMBER NOT NULL,
  RS_STATUS VARCHAR2(30) NOT NULL
);

CREATE TABLE ERS_REIMBURSEMENT_TYPE(
  RT_ID NUMBER NOT NULL,
  RT_TYPE VARCHAR2(30) NOT NULL
);

/*PRIMARY KEYS*/
ALTER TABLE ERS_USERS
ADD CONSTRAINT ERS_USERS_PK
PRIMARY KEY (U_ID);

ALTER TABLE ERS_USER_ROLES
ADD CONSTRAINT ERS_USER_ROLES_PK
PRIMARY KEY (UR_ID);

ALTER TABLE ERS_REIMBURSEMENTS
ADD CONSTRAINT ERS_REIMBURSEMENTS_PK
PRIMARY KEY (R_ID);

ALTER TABLE ERS_REIMBURSEMENT_STATUS
ADD CONSTRAINT ERS_REIMBURSEMENT_STATUS_PK
PRIMARY KEY (RS_ID);

ALTER TABLE ERS_REIMBURSEMENT_TYPE
ADD CONSTRAINT ERS_REIMBURSEMENT_TYPE_PK
PRIMARY KEY (RT_ID);

/*UNIQUE IDENTIFIERS*/
ALTER TABLE ERS_USERS
ADD CONSTRAINT ERS_USERS_U_USERNAME_UN
UNIQUE (U_USERNAME);

ALTER TABLE ERS_USERS
ADD CONSTRAINT ERS_USERS_U_EMAIL_UN
UNIQUE (U_EMAIL);

/* FORIEGN KEYS */
ALTER TABLE ERS_USERS
ADD CONSTRAINT ERS_UR_ID_FK
FOREIGN KEY (UR_ID) REFERENCES ERS_USER_ROLES(UR_ID);

ALTER TABLE ERS_REIMBURSEMENTS
ADD CONSTRAINT U_ID_AUTHOR_FK
FOREIGN KEY (U_ID_AUTHOR) REFERENCES ERS_USERS(U_ID);

ALTER TABLE ERS_REIMBURSEMENTS
ADD CONSTRAINT U_ID_RESOLVER_FK
FOREIGN KEY (U_ID_RESOLVER) REFERENCES ERS_USERS(U_ID);

ALTER TABLE ERS_REIMBURSEMENTS
ADD CONSTRAINT RT_TYPE_FK
FOREIGN KEY (RT_ID) REFERENCES ERS_REIMBURSEMENT_TYPE(RT_ID);

ALTER TABLE ERS_REIMBURSEMENTS
ADD CONSTRAINT RT_STATUS_FK
FOREIGN KEY (RS_ID) REFERENCES ERS_REIMBURSEMENT_STATUS(RS_ID);


/*SEQUENCES AND TRIGGERS*/
CREATE SEQUENCE SQ_USER_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SQ_REIMBURSEMENT_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT
BEFORE INSERT ON ERS_REIMBURSEMENTS
FOR EACH ROW 
BEGIN
  SELECT SQ_REIMBURSEMENT_PK.NEXTVAL INTO :NEW.R_ID FROM DUAL; 
END;

CREATE OR REPLACE TRIGGER TR_INSERT_USER
BEFORE INSERT ON ERS_USERS
FOR EACH ROW 
BEGIN
  SELECT SQ_USER_PK.NEXTVAL INTO :NEW.U_ID FROM DUAL; 
END;

/*STORED PROCEDURES*/
CREATE OR REPLACE PROCEDURE CREATE_USER(UNAME IN VARCHAR2, PASS IN VARCHAR2,
FNAME IN VARCHAR2, LNAME IN VARCHAR2, EMAIL IN VARCHAR2, ROLEID IN NUMBER)
IS
BEGIN
  INSERT INTO ERS_USERS (U_USERNAME, U_PASSWORD, U_FIRSTNAME, U_LASTNAME, U_EMAIL, UR_ID)
  VALUES (UNAME, PASS, FNAME, LNAME, EMAIL, ROLEID);
END;

CREATE OR REPLACE PROCEDURE RETRIEVE_USER(ID2 IN NUMBER, S OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN S FOR
      SELECT * FROM ERS_USERS WHERE ERS_USERS.U_ID=ID2;
END;

CREATE OR REPLACE PROCEDURE RETRIEVE_USER_LOGIN(UNAME IN VARCHAR2, PASS IN VARCHAR2, S OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN S FOR
      SELECT * FROM ERS_USERS WHERE ERS_USERS.U_USERNAME=UNAME AND ERS_USERS.U_PASSWORD=PASS;
END;

CREATE OR REPLACE PROCEDURE CREATE_REIMBURSEMENT(AMT IN NUMBER, DESCRIPT IN VARCHAR2, RECEIPT IN BLOB, 
SUBMIT IN TIMESTAMP, AUTHORID IN NUMBER, RTID IN NUMBER, RSID IN NUMBER)
IS
BEGIN
  INSERT INTO ERS_REIMBURSEMENTS(R_AMOUNT, R_DESCRIPTION, R_RECEIPT, R_SUBMITTED, U_ID_AUTHOR, RT_ID, RS_ID)
  VALUES(AMT, DESCRIPT, RECEIPT, SUBMIT, AUTHORID, RTID, RSID);
END;

CREATE OR REPLACE PROCEDURE RETRIEVE_ALL_REIMBURSEMENTS(S OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN S FOR
        SELECT * FROM ERS_REIMBURSEMENTS;
END;

/*might need later*/
CREATE OR REPLACE PROCEDURE RETRIEVE_REIMBURSEMENTS_BY_UID;
CREATE OR REPLACE PROCEDURE UPDATE_PASSWORD;
CREATE OR REPLACE PROCEDURE UPDATE_REIMBURSEMENT;