/*******************************************************
*                Create Table Structure                *
*******************************************************/

CREATE TABLE ERS_REIMBURSEMENTS(
  R_ID          NUMBER NOT NULL,
  R_AMOUNT      NUMBER NOT NULL, 
  R_DESCR       VARCHAR2(100),
  R_RECEIPT     BLOB, 
  R_SUBMITTED   TIMESTAMP NOT NULL,
  R_RESOLVED    TIMESTAMP, 
  U_ID_AUTHOR   NUMBER NOT NULL,
  U_ID_RESOLVER NUMBER,
  RT_TYPE       NUMBER NOT NULL,
  RS_STATUS     NUMBER NOT NULL,
  CONSTRAINT    PK_ERS_REIMBURSEMENTS PRIMARY KEY  (R_ID)
);
CREATE TABLE ERS_REIMBURSEMENT_STATUS(
  RS_ID         NUMBER NOT NULL,
  RS_STATUS     VARCHAR2(30) NOT NULL,
  CONSTRAINT    PK_ERS_REIMBURSEMENT_STATUS PRIMARY KEY (RS_ID)
);
CREATE TABLE ERS_REIMBURSEMENT_TYPE (
  RT_ID         NUMBER NOT NULL,
  RT_TYPE       VARCHAR2(30) NOT NULL,
  CONSTRAINT    PK_ERS_REIMBURSEMENT_TYPE PRIMARY KEY (RT_ID)
);
CREATE TABLE ERS_USER_ROLES(
  UR_ID         NUMBER NOT NULL,
  UR_ROLE       VARCHAR2(40),
  CONSTRAINT    PK_ERS_USER_ROLES PRIMARY KEY (UR_ID)
);
CREATE TABLE ERS_USERS(
  U_ID          NUMBER NOT NULL,
  U_USERNAME    VARCHAR2(40) UNIQUE NOT NULL,
  U_PASSWORD    VARCHAR2(40) NOT NULL,
  U_FIRSTNAME   VARCHAR2(30),
  U_LASTNAME    VARCHAR2(30),
  U_EMAIL       VARCHAR2(100) UNIQUE,
  UR_ID         NUMBER NOT NULL,
  CONSTRAINT PK_ERS_USERS PRIMARY KEY (U_ID)
);


/*******************************************************
*                Create Constraint Reqs                *
*******************************************************/

ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT FK_ERS_REIMBURSEMENTS_AUTHOR
  FOREIGN KEY (U_ID_AUTHOR) REFERENCES ERS_USERS (U_ID);
ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT FK_ERS_REIMBURSEMENTS_RESOLV
  FOREIGN KEY (U_ID_RESOLVER) REFERENCES ERS_USERS (U_ID);
ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT FK_ERS_REIMBURSEMENTS_TYPE
  FOREIGN KEY (RT_TYPE) REFERENCES ERS_REIMBURSEMENT_TYPE (RT_ID);
ALTER TABLE ERS_REIMBURSEMENTS ADD CONSTRAINT FK_ERS_REIMBURSEMENTS_STATUS
  FOREIGN KEY (RS_STATUS) REFERENCES ERS_REIMBURSEMENT_STATUS (RS_ID);
ALTER TABLE ERS_USERS ADD CONSTRAINT FK_ERS_USERS_ROLE_ID
  FOREIGN KEY (UR_ID) REFERENCES ERS_USER_ROLES (UR_ID);
  
  
/*******************************************************
*                  Create Sequences                    *
*******************************************************/

CREATE SEQUENCE SQ_ERS_REIMBURSEMENTS_PK
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE SQ_ERS_REIMBURSEMENTS_STAT_PK
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE SQ_ERS_REIMBURSEMENTS_TYPE_PK
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE SQ_ERS_USER_ROLES_PK
  START WITH 1
  INCREMENT BY 1;
CREATE SEQUENCE SQ_ERS_USERS_PK
  START WITH 1
  INCREMENT BY 1;
  
  
/*******************************************************
*                   Create Triggers                    *
*******************************************************/

CREATE OR REPLACE TRIGGER TR_INSERT_ERS_REIMBURS
  BEFORE INSERT ON ERS_REIMBURSEMENTS
  FOR EACH ROW
  BEGIN
    SELECT SQ_ERS_REIMBURSEMENTS_PK.NEXTVAL INTO :NEW.R_ID FROM DUAL;
  END;
CREATE OR REPLACE TRIGGER TR_INSERT_ERS_REIMBURS_TYPE
  BEFORE INSERT ON ERS_REIMBURSEMENT_TYPE
  FOR EACH ROW
  BEGIN
    SELECT SQ_ERS_REIMBURSEMENTS_TYPE_PK.NEXTVAL INTO :NEW.RT_ID FROM DUAL;
  END;
CREATE OR REPLACE TRIGGER TR_INSERT_ERS_REIMBURS_STAT
  BEFORE INSERT ON ERS_REIMBURSEMENT_STATUS
  FOR EACH ROW
  BEGIN
    SELECT SQ_ERS_REIMBURSEMENTS_STAT_PK.NEXTVAL INTO :NEW.RS_ID FROM DUAL;
  END;
CREATE OR REPLACE TRIGGER TR_INSERT_ERS_USER_ROLES
  BEFORE INSERT ON ERS_USER_ROLES
  FOR EACH ROW
  BEGIN
    SELECT SQ_ERS_USER_ROLES_PK.NEXTVAL INTO :NEW.UR_ID FROM DUAL;
  END;
CREATE OR REPLACE TRIGGER TR_INSERT_ERS_USERS
  BEFORE INSERT ON ERS_USERS
  FOR EACH ROW
  BEGIN
    SELECT SQ_ERS_USERS_PK.NEXTVAL INTO :NEW.U_ID FROM DUAL;
  END;


/*******************************************************
*               Add Sample Table Data                  *
*******************************************************/

INSERT INTO ERS_USER_ROLES (UR_ROLE) VALUES ('Employee');
INSERT INTO ERS_USER_ROLES (UR_ROLE) VALUES ('Manager');
INSERT INTO ERS_USER_ROLES (UR_ROLE) VALUES ('Admin');

--CONTINUE ADDING USER, THEN WORK ON STORE PROCEDURES FOR ALL REQS