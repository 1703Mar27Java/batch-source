CREATE TABLE DEPARTMENT(
    DEPARTMENT_ID NUMBER PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(200)
);

CREATE TABLE EMPLOYEE(
    EMPLOYEE_ID NUMBER PRIMARY KEY,
    EMP_FIRSTNAME VARCHAR2(200),
    EMP_LASTNAME VARCHAR2(200),
    DEPARTMENT_ID NUMBER,
    SALARY NUMBER, 
    EMP_EMAIL VARCHAR2(200),
    CONSTRAINT FK_EMP_DEP
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID)
);

CREATE SEQUENCE SQ_DEP_PK
START WITH 1
INCREMENT BY 1;

CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1
INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    SELECT SQ_DEP_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;

INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('Gumball');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('Taffy');
INSERT INTO DEPARTMENT(DEPARTMENT_NAME) VALUES ('Liquorice');

INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
VALUES ('Chuck', 'Goodman', 1, 80000, 'thegoodman@gmail.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
VALUES ('Lyle', 'Goodman', 1, 82000, 'theothergoodman@gmail.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
VALUES ('Liz', 'Smith', 2, 76000, 'lizthelizard@yahoo.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
VALUES ('Kai', 'Coolio', 2, 72000, 'surfsup@gmail.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
VALUES ('Catarina', 'Espindola', 3, 86000, 'cat@hotmail.com');
INSERT INTO EMPLOYEE(EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID, SALARY, EMP_EMAIL)
VALUES ('Pierre', 'Smiles', 3, 84000, 'pierre@hotmail.com');

CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(D_ID IN NUMBER, RAISE_PERCENT IN NUMBER, NEW_AVG OUT NUMBER, IS_VALID OUT BOOLEAN)
IS 
D_COUNT NUMBER;
BEGIN

SELECT COUNT(DEPARTMENT_ID)
INTO D_COUNT
FROM DEPARTMENT
WHERE DEPARTMENT_ID = D_ID;

UPDATE EMPLOYEE
SET SALARY = SALARY * RAISE_PERCENT
WHERE DEPARTMENT_ID = D_ID;

SELECT AVG(SALARY)
INTO NEW_AVG
FROM EMPLOYEE
WHERE DEPARTMENT_ID = D_ID;


IF D_COUNT > 0 THEN
    IS_VALID := TRUE;
ELSE
    IS_VALID := FALSE;
END IF;

END;
